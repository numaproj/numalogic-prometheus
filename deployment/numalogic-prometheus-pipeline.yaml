apiVersion: numaflow.numaproj.io/v1alpha1
kind: Pipeline
metadata:
  name: numalogic-prometheus-pipeline
spec:
  watermark:
    disabled: true
  limits:
    readBatchSize: 10
    bufferMaxLength: 500
    bufferUsageLimit: 100
  vertices:
  - name: input
    source:
      http:
        service: true
  - name: decode
    scale:
      min: 1
      max: 1
    udf:
     container:
       image: quay.io/numaio/numaflow-udf/prometheus-serde
  - name: filter
    scale:
      min: 1
      max: 1
    udf:
     container:
       image: quay.io/numaio/numalogic-prometheus
       args:
       - python
       - starter.py
       - metric_filter
  - name: preprocess
    scale:
      min: 1
      max: 1
    udf:
      container:
         image: quay.io/numaio/numalogic-prometheus
         args:
         - python
         - starter.py
         - preprocess
  - name: window
    scale:
      min: 1
      max: 1
    udf:
      container:
         image: quay.io/numaio/numalogic-prometheus
         args:
         - python
         - starter.py
         - window
         env:
         - name: REDIS_HOST
           value: numalogic-redis-cluster.numalogic-prometheus.svc.cluster.local
         - name: REDIS_PORT
           value: "6379"
         - name: REDIS_AUTH
           value: <REDIS_AUTH>
    limits:
      readBatchSize: 1
  - name: inference
    scale:
      min: 1
    udf:
      container:
        image: quay.io/numaio/numalogic-prometheus
        args:
        - python
        - starter.py
        - inference
        env:
        - name: TRACKING_URI
          value: "http://mlflow-service.numalogic-prometheus.svc.cluster.local:5000"
        - name: WIN_SIZE
          value: "12"
        - name: THRESHOLD_MIN
          value: "0.1"
        - name: MODEL_NAME
          value: "ae_sparse"
        - name: ROLLOUT_WIN_SIZE
          value: "8"
        - name: ROLLOUT_THRESHOLD_MIN
          value: "0.1"
        - name: ROLLOUT_MODEL_NAME
          value: "ae_sparse"
        - name: RETRAIN_FREQ_HR
          value: "8"
    metadata:
      annotations:
        iam.amazonaws.com/role: <MLFLOW_S3_ROLE_ARN>
  - name: postprocess
    scale:
      min: 1
    udf:
      container:
        image: quay.io/numaio/numalogic-prometheus
        args:
        - python
        - starter.py
        - postprocess
        env:
        - name: REDIS_HOST
          value: numalogic-redis-cluster.numalogic-prometheus.svc.cluster.local
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_AUTH
          value: <REDIS_AUTH>
  - name: training-workflow
    scale:
      min: 1
    limits:
      readBatchSize: 2000
    sink:
      udsink:
        container:
          env:
            - name: ARGO_WORKFLOW_TEMPLATE
              value: numalogic-argocd-workflow-template
            - name: PARAMETER_NAME
              value: "payload"
            - name: MSG_DEDUP_KEYS
              value: ".namespace,.metric"
            - name: READ_INTERVAL_DURATION
              value: "1s"
            - name: DEDUP_CACHE_LIMIT
              value: "10000"
            - name: DEDUP_CACHE_TTL_DURATION
              value: "30m"
          image: quay.io/numaio/numaflow-sink/argo-workflow:v0.0.3
  - name: rollouts-workflow
    scale:
      min: 1
    limits:
      readBatchSize: 2000
    sink:
      udsink:
        container:
          env:
            - name: ARGO_WORKFLOW_TEMPLATE
              value: numalogic-rollouts-workflow-template
            - name: PARAMETER_NAME
              value: "payload"
            - name: MSG_DEDUP_KEYS
              value: ".namespace,.metric"
            - name: READ_INTERVAL_DURATION
              value: "1s"
            - name: DEDUP_CACHE_LIMIT
              value: "10000"
            - name: DEDUP_CACHE_TTL_DURATION
              value: "30m"
          image: quay.io/numaio/numaflow-sink/argo-workflow:v0.0.3
  - name: prometheus-pusher
    scale:
      min: 1
    sink:
      udsink:
        container:
          env:
          - name: SKIP_VALIDATION_FAILED
            value: "true"
          - name: "PROMETHEUS_SERVER"
            value: <PROMETHEUS_SERVER>
          image: quay.io/numaio/numaflow-sink/prometheus-pusher
  - name: output
    scale:
      min: 1
      max: 1
    sink:
      log: {}
  - name: training-output
    scale:
      min: 1
      max: 1
    sink:
      log: {}
  - name: rollouts-output
    scale:
      min: 1
      max: 1
    sink:
      log: {}
  edges:
  - from: input
    to: decode
  - from: decode
    to: filter
  - from: filter
    to: window
  - from: window
    to: preprocess
  - from: preprocess
    to: inference
  - from: inference
    to: training-workflow
    conditions:
      keyIn:
        - train
  - from: inference
    to: training-output
    conditions:
      keyIn:
        - train
  - from: inference
    to: postprocess
    conditions:
      keyIn:
        - postprocess
  - from: inference
    to: rollouts-workflow
    conditions:
      keyIn:
       - rollout-train
  - from: inference
    to: rollouts-output
    conditions:
      keyIn:
        - rollout-train
  - from: postprocess
    to: output
  - from: postprocess
    to: prometheus-pusher
