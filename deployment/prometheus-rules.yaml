apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    prometheus: k8s-prometheus
    role: alert-rules
  name: deploy-better-metric-rules
  namespace: addon-metricset-ns
spec:
  groups:
  - name: deploy.better.metric.rules
    rules:
    - record: namespace_asset_cpu_usage_seconds_total
      expr: |
        sum by (namespace, assetAlias) (
                sum(rate(container_cpu_usage_seconds_total{image!="", container!=""}[5m])) by (namespace, pod) * on (namespace, pod) group_left(assetAlias)
                label_replace(kube_pod_labels{job="kube-state-metrics"}, "assetAlias", "$1", "label_assetAlias","(.*)")
        )
    - record: namespace_asset_cpu_resource_requests
      expr: |
        sum by (namespace, assetAlias) (
                sum(kube_pod_container_resource_requests{resource="cpu"}) by (namespace, pod) * on (namespace, pod) group_left(assetAlias)
                label_replace(kube_pod_labels{job="kube-state-metrics"}, "assetAlias", "$1", "label_assetAlias","(.*)")
        )
    - record: namespace_asset_memory_usage_bytes
      expr: |
        sum by (namespace, assetAlias) (
                sum(container_memory_usage_bytes{image!="", container!=""}) by (namespace, pod)
                * on (namespace, pod) group_left(assetAlias)
                label_replace(kube_pod_labels{job="kube-state-metrics"}, "assetAlias", "$1", "label_assetAlias","(.*)")
        )
    - record: namespace_asset_memory_resource_requests
      expr: |
        sum by (namespace, assetAlias) (
                sum(kube_pod_container_resource_requests{resource="memory"}) by (namespace, pod) * on (namespace, pod) group_left(assetAlias)
                label_replace(kube_pod_labels{job="kube-state-metrics"}, "assetAlias", "$1", "label_assetAlias","(.*)")
        )
    - record: namespace_asset_pod_cpu_utilization
      expr: namespace_asset_cpu_usage_seconds_total * 100 / namespace_asset_cpu_resource_requests
      labels:
        numalogic: "true"
    - record: namespace_asset_pod_memory_utilization
      expr: namespace_asset_memory_usage_bytes * 100 / namespace_asset_memory_resource_requests
      labels:
        numalogic: "true"
    - record: namespace_app_pod_count
      expr: |
        label_join((sum(label_replace(
                    (kube_pod_status_ready{condition="true"} * on (namespace, pod) group_left(label_app) kube_pod_labels{job="kube-state-metrics"}), "app", "$1", "label_app","(.*)")) by (namespace, app)), "apps_deployment", "", "app"
        )
      labels:
        numalogic: "true"
    - record: namespace_app_pod_count_no_alert
      expr: sum(namespace_app_pod_count) by (namespace, app, apps_deployment)
    - record: namespace_app_pod_http_server_requests_latency
      expr: label_join((sum(rate(http_server_requests_seconds_sum{status="200"}[1m])) by (namespace, app) / sum(rate(http_server_requests_seconds_count{status="200"}[1m])) by (namespace, app)), "apps_deployment", "", "app")
      labels:
        numalogic: "true"
    - record: namespace_app_pod_http_server_requests_errors_4xx
      expr: label_join((sum(rate(http_server_requests_seconds_count{status=~"4[0-9]+"}[1m])) by (namespace, app)), "apps_deployment", "", "app") / namespace_app_pod_count_no_alert
      labels:
        numalogic: "true"
    - record: namespace_app_pod_http_server_requests_errors_5xx
      expr: label_join((sum(rate(http_server_requests_seconds_count{status=~"5[0-9]+"}[1m])) by (namespace, app)), "apps_deployment", "", "app") / namespace_app_pod_count_no_alert
      labels:
        numalogic: "true"
    - record: namespace_app_pod_http_server_requests_2xx
      expr: label_join((sum(rate(http_server_requests_seconds_count{status=~"2[0-9]+"}[1m])) by (namespace, app)), "apps_deployment", "", "app") / namespace_app_pod_count_no_alert
      labels:
        numalogic: "true"
    - record: namespace_app_pod_http_server_requests_errors
      expr: label_join((sum(rate(http_server_requests_seconds_count{status=~"[4-5][0-9]+"}[1m])) by (namespace, app)), "apps_deployment", "", "app") / namespace_app_pod_count_no_alert
      labels:
        numalogic: "true"
    - record: namespace_app_pod_http_server_requests_total
      expr: label_join((sum(rate(http_server_requests_seconds_count[1m])) by (namespace, app)), "apps_deployment", "", "app") / namespace_app_pod_count_no_alert
      labels:
        numalogic: "true"
    - record: namespace_app_pod_http_server_requests_error_rate
      expr: namespace_app_pod_http_server_requests_errors_5xx / namespace_app_pod_http_server_requests_total
      labels:
        numalogic: "true"
    - record: namespace_hash_pod_count
      expr: sum(label_replace(label_replace((kube_pod_status_ready{condition="true"} * on (namespace, pod) group_left(label_rollouts_pod_template_hash, label_pod_template_hash) kube_pod_labels{job="kube-state-metrics"}), "rollouts_pod_template_hash", "$1", "label_rollouts_pod_template_hash","(.*)"), "pod_template_hash", "$1", "label_pod_template_hash","(.*)")) by (namespace, rollouts_pod_template_hash, pod_template_hash)
      labels:
        numalogic: "true"
    - record: namespace_hash_pod_count_no_alert
      expr: sum(namespace_hash_pod_count) by (namespace, rollouts_pod_template_hash, pod_template_hash)
    - record: namespace_hash_http_server_requests_errors_5xx
      expr: sum(rate(http_server_requests_seconds_count{status=~"5[0-9]+"}[1m])) by (namespace, pod_template_hash, rollouts_pod_template_hash) / namespace_hash_pod_count_no_alert
      labels:
        numalogic: "true"
    - record: namespace_hash_pod_http_server_requests_total
      expr: sum(rate(http_server_requests_seconds_count[1m])) by (namespace, rollouts_pod_template_hash, pod_template_hash) / namespace_hash_pod_count_no_alert
      labels:
        numalogic: "true"
    - record: namespace_hash_pod_http_server_requests_error_rate
      expr: namespace_hash_http_server_requests_errors_5xx / namespace_hash_pod_http_server_requests_total
      labels:
        numalogic: "true"
    - record: namespace_hash_pod_http_server_requests_latency
      expr: sum(rate(http_server_requests_seconds_sum{status="200"}[1m])) by (namespace, rollouts_pod_template_hash, pod_template_hash) / sum(rate(http_server_requests_seconds_count{status="200"}[1m])) by (namespace, rollouts_pod_template_hash, pod_template_hash)
      labels:
        numalogic: "true"